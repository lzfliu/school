<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lzf.dao.CustomerMapper">
    <resultMap id="BaseResultMap" type="com.lzf.entity.Customer">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="customer_type" property="customerType" jdbcType="CHAR"/>
        <result column="customer_name" property="customerName" jdbcType="VARCHAR"/>
        <result column="short_name" property="shortName" jdbcType="VARCHAR"/>
        <result column="province" property="province" jdbcType="VARCHAR"/>
        <result column="city" property="city" jdbcType="VARCHAR"/>
        <result column="district" property="district" jdbcType="VARCHAR"/>
        <result column="customer_address" property="customerAddress" jdbcType="VARCHAR"/>
        <result column="enterprise" property="enterprise" jdbcType="VARCHAR"/>
        <result column="contact_man" property="contactMan" jdbcType="VARCHAR"/>
        <result column="contact_phone" property="contactPhone" jdbcType="VARCHAR"/>
        <result column="contact_mobile" property="contactMobile" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
        <result column="is_available" property="isAvailable" jdbcType="TINYINT"/>
        <result column="is_delete" property="isDelete" jdbcType="TINYINT"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from customer
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.lzf.entity.Customer">
    insert into customer (id, customer_type, customer_name, 
      short_name, province, city, 
      district, customer_address, enterprise, 
      contact_man, contact_phone, contact_mobile, 
      create_time, create_by, update_time, 
      update_by, is_available, is_delete
      )
    values (#{id,jdbcType=VARCHAR}, #{customerType,jdbcType=CHAR}, #{customerName,jdbcType=VARCHAR}, 
      #{shortName,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{district,jdbcType=VARCHAR}, #{customerAddress,jdbcType=VARCHAR}, #{enterprise,jdbcType=VARCHAR}, 
      #{contactMan,jdbcType=VARCHAR}, #{contactPhone,jdbcType=VARCHAR}, #{contactMobile,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{isAvailable,jdbcType=TINYINT}, #{isDelete,jdbcType=TINYINT}
      )
  </insert>
    <insert id="insertList" parameterType="com.lzf.entity.SysCompany">
      insert into customer (id, customer_type, customer_name,
      province, city,
      district, customer_address, enterprise,
      contact_man, contact_phone, contact_mobile,
      create_time, create_by,  is_available, is_delete
      )
      values
      <foreach collection="list" index="index" item="pojo" separator=",">
      (#{pojo.coreCustomerId,jdbcType=VARCHAR}, 'company', #{pojo.name,jdbcType=VARCHAR},
       #{pojo.province,jdbcType=VARCHAR}, #{pojo.city,jdbcType=VARCHAR},
      #{pojo.district,jdbcType=VARCHAR}, #{pojo.address,jdbcType=VARCHAR}, #{pojo.creditCode,jdbcType=VARCHAR},
      #{pojo.linkman,jdbcType=VARCHAR}, #{pojo.phone,jdbcType=VARCHAR}, #{pojo.phone,jdbcType=VARCHAR},
      #{pojo.createdOn,jdbcType=TIMESTAMP}, #{pojo.createdBy,jdbcType=VARCHAR},  #{pojo.isAvailable,jdbcType=TINYINT}, #{pojo.isDelete,jdbcType=TINYINT}
      )
      </foreach>
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.lzf.entity.Customer">
    update customer
    set customer_type = #{customerType,jdbcType=CHAR},
      customer_name = #{customerName,jdbcType=VARCHAR},
      short_name = #{shortName,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      district = #{district,jdbcType=VARCHAR},
      customer_address = #{customerAddress,jdbcType=VARCHAR},
      enterprise = #{enterprise,jdbcType=VARCHAR},
      contact_man = #{contactMan,jdbcType=VARCHAR},
      contact_phone = #{contactPhone,jdbcType=VARCHAR},
      contact_mobile = #{contactMobile,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      is_available = #{isAvailable,jdbcType=TINYINT},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
    select id, customer_type, customer_name, short_name, province, city, district, customer_address, 
    enterprise, contact_man, contact_phone, contact_mobile, create_time, create_by, update_time, 
    update_by, is_available, is_delete
    from customer
    where id = #{id,jdbcType=VARCHAR}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, customer_type, customer_name, short_name, province, city, district, customer_address, 
    enterprise, contact_man, contact_phone, contact_mobile, create_time, create_by, update_time, 
    update_by, is_available, is_delete
    from customer
  </select>
</mapper>