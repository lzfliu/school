<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lzf.dao.CustomerStaffMapper" >
  <resultMap id="BaseResultMap" type="com.lzf.entity.CustomerStaff" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="customer_id" property="customerId" jdbcType="VARCHAR" />
    <result column="staff_name" property="staffName" jdbcType="VARCHAR" />
    <result column="contact_mobile" property="contactMobile" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="birth" property="birth" jdbcType="BIGINT" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="district" property="district" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="gender" property="gender" jdbcType="BIT" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="is_available" property="isAvailable" jdbcType="TINYINT" />
    <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from customer_staff
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.lzf.entity.CustomerStaff" >
    insert into customer_staff (id, customer_id, staff_name, 
      contact_mobile, email, birth, 
      province, avatar, city, 
      district, address, create_time, 
      gender, create_by, update_time, 
      update_by, is_available, is_delete
      )
    values (#{id,jdbcType=VARCHAR}, #{customerId,jdbcType=VARCHAR}, #{staffName,jdbcType=VARCHAR}, 
      #{contactMobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{birth,jdbcType=BIGINT}, 
      #{province,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{district,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{gender,jdbcType=BIT}, #{createBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{isAvailable,jdbcType=TINYINT}, #{isDelete,jdbcType=TINYINT}
      )
  </insert>
    <insert id="insertList">
      insert into customer_staff (id, customer_id, staff_name,
      contact_mobile, email, birth,
      province, avatar, city,
      district, address, create_time,
      gender, create_by, update_time,
      update_by, is_available, is_delete
      )
    values
      <foreach collection="list" index="index" item="pojo" separator=",">
    (#{pojo.id,jdbcType=VARCHAR},#{pojo.customerId,jdbcType=VARCHAR},#{pojo.staffName,jdbcType=VARCHAR},
     #{pojo.contactMobile,jdbcType=VARCHAR},#{pojo.email,jdbcType=VARCHAR},#{pojo.birth,jdbcType=BIGINT},
     #{pojo.province,jdbcType=VARCHAR},#{pojo.avatar,jdbcType=VARCHAR},#{pojo.city,jdbcType=VARCHAR},
     #{pojo.district,jdbcType=VARCHAR},#{pojo.address,jdbcType=VARCHAR},#{pojo.createTime,jdbcType=TIMESTAMP},
     #{pojo.gender,jdbcType=BIT},#{pojo.createBy,jdbcType=VARCHAR},#{pojo.updateTime,jdbcType=TIMESTAMP},
     #{pojo.updateBy,jdbcType=VARCHAR},#{pojo.isAvailable,jdbcType=TINYINT},#{pojo.isDelete,jdbcType=TINYINT}
      )
      </foreach>
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.lzf.entity.CustomerStaff" >
    update customer_staff
    set customer_id = #{customerId,jdbcType=VARCHAR},
      staff_name = #{staffName,jdbcType=VARCHAR},
      contact_mobile = #{contactMobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      birth = #{birth,jdbcType=BIGINT},
      province = #{province,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      district = #{district,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      gender = #{gender,jdbcType=BIT},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      is_available = #{isAvailable,jdbcType=TINYINT},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select id, customer_id, staff_name, contact_mobile, email, birth, province, avatar, 
    city, district, address, create_time, gender, create_by, update_time, update_by, 
    is_available, is_delete
    from customer_staff
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, customer_id, staff_name, contact_mobile, email, birth, province, avatar, 
    city, district, address, create_time, gender, create_by, update_time, update_by, 
    is_available, is_delete
    from customer_staff
  </select>
</mapper>